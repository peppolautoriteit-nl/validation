
--------------------------
Scheduled for next release
--------------------------

No changes as of yet.

==========================
=   Published releases   =
==========================

REPOSITORY RELEASE 2022-11-18 (November 2022 release)
=====================================================

*This release will go into effect on February 6, 2023*. Until that time, the current release (2022-05-01) is still the active version.

- Updated SI-UBL 2.0 (NLCIUS) to 2.0.3.5
- Updates SI-UBL 2.0 (NLCIUS) g-account extension to 1.0.5
- Updates NLCIUS-CII to 1.0.3.4

SI-UBL 2.0.3.5:
- Updated the CenPC 434 rules for SI-UBL to release 1.3.9 (from 1.3.8). For the full changelog of these changes, see https://github.com/ConnectingEurope/eInvoicing-EN16931/releases/tag/validation-1.3.9
- Fixed an issue with BR-NL-11, the check for a payment means if the payment is from customer to supplier. This rule no longer fires on CreditNote documents.

SI-UBL g-account extension 1.0.5:
- Updated the CenPC 434 rules for SI-UBL to release 1.3.9 (from 1.3.8). For the full changelog of these changes, see https://github.com/ConnectingEurope/eInvoicing-EN16931/releases/tag/validation-1.3.9

NLCIUS-CII 1.0.3.4:
- Updated the CenPC 434 rules for SI-UBL to release 1.3.9 (from 1.3.8). For the full changelog of these changes, see https://github.com/ConnectingEurope/eInvoicing-EN16931/releases/tag/validation-1.3.9



REPOSITORY RELEASE 2022-05-01 (Spring 2022 release)
===================================================

- Updated SI-UBL 2.0 (NLCIUS) to 2.0.3.4
- Updated SI-UBL 2.0 (NLCIUS) g-acount extension to 1.0.4
- Updated NLCIUS-CII to 1.0.3.3
- Updated SI-UBL 1.2 to SI-UBL 1.2.4

SI-UBL 2.0 2.0.3.4:
- Updated the CenPC 434 rules for SI-UBL to release 1.3.8 (from 1.3.7). For the full changelog of these changes, see https://github.com/ConnectingEurope/eInvoicing-EN16931/releases/tag/validation-1.3.8

SI-UBL 2.0 g-account extension X.Y.Z:
- Made the CustomizationID a bit more lenient, so that other documents that are compliant to both NLCIUS and the g-account extension can use this validation as well. They MUST have a customizationID that starts with 'urn:cen.eu:en16931:2017#compliant#urn:fdc:nen.nl:nlcius:v1.0' AND contains '#conformant#urn:fdc:nen.nl:gaccount:v1.0'
- Updated the CenPC 434 rules for SI-UBL to release 1.3.8 (from 1.3.7). For the full changelog of these changes, see https://github.com/ConnectingEurope/eInvoicing-EN16931/releases/tag/validation-1.3.8

NLCIUS-CII 1.0.3.3:
- Updated the CenPC 434 rules for SI-UBL to release 1.3.8 (from 1.3.7). For the full changelog of these changes, see https://github.com/ConnectingEurope/eInvoicing-EN16931/releases/tag/validation-1.3.8

SI-UBL 1.2.4:
- Updated the way currencyID values are checked, as some validator implementations are unable to handle the way they were implemented. See https://github.com/peppolautoriteit-nl/validation/issues/37 for more information.



REPOSITORY RELEASE 2021-11-01 (Fall 2021 release)
=================================================

- Updated SI-UBL 2.0 (NLCIUS) to 2.0.3.3
- Updated SI-UBL 2.0 (NLCIUS) g-account extension to 1.0.3
- Updated NLCIUS CII to 1.0.3.2

The only change in all three of these updates is that the underlying CenPC 434 rules (the rules that validate The European Norm, EN-16931) have been updated to version 1.3.7.

SI-UBL 2.0.3.3:
- Updated the CenPC 434 rules for SI-UBL to release 1.3.7 (from 1.3.6). For the full changelog of those, see https://github.com/ConnectingEurope/eInvoicing-EN16931/releases

SI-UBL 2.0 g-account extension 1.0.3:
- Updated the base SI-UBL version to 2.0.3.3 (from 2.0.3.2)
- Updated the base CenPC 434 rules for SI-UBL to release 1.3.7 (from 1.3.6).

NLCIUS-CII 1.0.3.2:
- Updated the base CenPC 434 rules for SI-UBL to release 1.3.7 (from 1.3.6).


REPOSITORY RELEASE 2021-07-05
=============================

- Updated SI-UBL 2.0 (NLCIUS) to 2.0.3.2
- Updated SI-UBL 2.0 (NLCIUS) g-account to 1.0.2
- Updated NLCIUS CII to 1.0.3.1
- Replaced the conversion scripts to translate schematron to XSLT. The directory was moved from tools/ to convert/, and the scripts have been cleaned up somewhat.

SI-UBL 2.0.3.2:
- Fixed an issue with PaymentMeansCode rules (BR-NL-12 and BR-NL-31); they are now treated as strings instead of integers (https://github.com/peppolautoriteit-nl/validation/issues/34)
- Updated the CenPC 434 rules for SI-UBL to release 1.3.6 (from 1.3.2). For the full changelog of those, see https://github.com/ConnectingEurope/eInvoicing-EN16931/releases. The most likely relevant changes are that the ISO ICD code has been updated, and that the severity of the UBL-SR- rules is now "fatal" instead of "warning".
- The CenPC 434 rules used here contain one additional change from the original in CenPC434 1.3.6: The check in rule BR-CO-15 has been changed to only consider cac:TaxTotal/cbc:TaxAmount on the document level, not every instance of this field. This is to accomodate for extensions that also use cac:TaxTotal/cbc:TaxAmount in other places.

SI-UBL 2.0 g-account extension 1.0.2:
- Updated the base SI-UBL version to 2.0.3.2 (from 2.0.3.1)
- Updated the base CenPC 434 rules for SI-UBL to release 1.3.6 (from 1.3.2), with the same workaround for BR-CO-15. See above.

NLCIUS-CII 1.0.3.1:
- Updated the base CenPC 434 rules for SI-UBL to release 1.3.6 (from 1.3.2). See above.


REPOSITORY RELEASE 2020-09-01
=============================

- Updated SI-UBL 2.0 to 2.0.3.1
- Updated SI-UBL 1.2 to 1.2.3
- Updated SI-UBL g-account to 1.0.1
- Added NLCIUS-CII validation files

SI-UBL 2.0.3.1:
- Fixed a typo in the rule BR-NL-23 (https://github.com/SimplerInvoicing/validation/issues/29)
- Changed the ubl: prefix to the wildcard * in the workaround for the CenPC issue (see https://github.com/ConnectingEurope/eInvoicing-EN16931/issues/212)
- Updated the underlying CEN PC434 validation files to version 1.3.2 (still with our existing additional fix, which has not been fixed upstream yet, and a new additional fix for negative zero checks, see README.md)

SI-UBL 2.0 g-account extension:
- Added the prefix [BR-GA-0] to the output of the corresponding rule (https://github.com/SimplerInvoicing/validation/issues/25)
- Updated the underlying CEN PC434 validation files to version 1.3.2 (still with our existing additional fix, which has not been fixed upstream yet, and a new additional fix for negative zero checks, see README.md)

SI-UBL 1.2.3:
- Correctly mark the schema element as XSLT2
- Renamed the BII pattern to avoid conflicts
- Added a check for the existence of cbc:ID in cac:Item/cac:ClassifiedTaxCategory. The cardinality of cbc:ID here is 1..1, but this was not checked.
- Added a check for the existence of cac:PartyTaxScheme in cac:TaxRepresentativeParty. The cardinality of cac:PartyTaxScheme is 1..1, but this was not checked.

NLCIUS-CII 1.0.3.0:
- Initial release: validation files for NLCIUS mapped to UN/CEFACT CII D16B

==========================
=   Published releases   =
==========================

REPOSITORY RELEASE 2020-03-30
=============================

- Updated SI-UBL 2.0 to 2.0.3
- Updated SI-UBL 1.2 to 1.2.2
- Updated SI-UBL g-account extension to have SI-UBL 2.0.3 as its base

SI-UBL 2.0.3
------------

- Updated to version 1.0.3 of the NLCIUS:
  * Added rule BR-NL-13: If an order line reference (BT-132) is specified, there must be an order reference (BT-13) on the document level
- Updated the underlying CEN/PC 434 validation files to version 1.3.1 (for a full changelog of those changes, see
  https://github.com/ConnectingEurope/eInvoicing-EN16931/releases/tag/validation-1.3.1)
- BR-NL-1 and BR-NL-10 will now also error if the KVK or OIN number is empty, not only if they are left out completely
- Added a general warning when using empty elements

SI-UBL 1.2.2
------------

- Changed DIGST to DK:DIGST in the list of supported ICD codes. It appears this value was set wrong in the PEPPOL BIS v2 codes version 3.5



REPOSITORY RELEASE 2020-02-14
=============================

- Added validation artefacts for the SI-UBL 2.0 g-account extension
- Updated SI-UBL 2.0.3
- Updated SI-UBL 1.2 to version 1.2.1
- For consistency, SI-UBL 2.0 .sch and .xsl files no longer contain the bugfix release number (this is present in the file itself)

SI-UBL 2.0 g-account extension
------------------------------

- Initial release

SI-UBL 2.0 release 2.0.3
------------------------

- Fixed issue #24: using whitespace before or after the CustomizationID would disable SI-UBL 2.0 rule validation

SI-UBL 1.2 Release 1.2.1
------------------------

- Added support for new ISO6523 ICD Codes:
    AU:ABN (0151)
    CH:UIDB (0183)
    DE:LID (9958)
    DK:ERST (0198)
    EE:CC (0191)
    IS:KTNR (0196)
    LEI (0199)
    LT:LEC (0200)
    NAL (0130)
    NL:OINO (0190)
    NO:ORG (0192)
    NO:ORGNR (9908)
    SG:UEN (0195)
    UBLBE (0193)


======================
= Published releases =
======================

REPOSITORY RELEASE 2019-12-12
=============================

- Updated SI-UBL 2.0:2.0.2


SI-UBL 2.0 RELEASE 2.0.2 (2019-12-12)
-------------------------------------

- Fixed the context for rules BR-S-08 and BR-Z-08 to only check on the document level.
- Applied the same context rule fixes for VATE, VATAE, and all other VAT types.
- Updated the CEN validation artefacts, from commit 20159a3a to 3cb9fda3. This includes a fixed check to allow for UBLVersionID (which is now allowed, as long as it is 2.1).


REPOSITORY RELEASE 2019-08-02
=============================

- Updated SI-UBL 2.0 to version 2.0.1


SI-UBL 2.0 RELEASE 2.0.1 (2019-08-02)
-------------------------------------

2019-06-03:
- Updated the CenPC434 UBL rules from release 1.1.0 to release 1.2.1 (from https://github.com/CenPC434/validation/, commit c750263a to commit 20159a3a), see https://github.com/CenPC434/validation/issues?q=is%3Aissue+is%3Aclosed+milestone%3Av1.2 and https://github.com/CenPC434

2019-05-28:
- Rewrote the rules for BR-NL-1 and BR-NL-10: As the rules were, it resulted in an XLST error on a document with multiple AccountingSupplierParty/PartyLegalEntity fields. Such documents should result in either a warning UBL-SR-09, UBL-SR-11, UBL-SR-15 or UBL-SR-17, not a total failure. The fixes are slightly more extensive, since we do still need to check whether at least one value is either '0106' or '0190'.

2019-05-07:
- SI-UBL 2.0: Fix in check for rule BR-NL-10: cac:AccountingCustomerParty/cac:Party/cac:PartyLegalEntity/cbc:CompanyID is mandatory if sender and receiver are from the Netherlands. It already checked whether the schemeID was 0106 or 0190 but the test also passed if the element was not present.

2019-05-06:
- Fixed the check for SI-UBL 1.2 /ubl:Invoice/cac:InvoiceLine/cac:Item/cac:OriginCountry/cbc:IdentificationCode/@listID, which should be ISO3166-1:Alpha2 (the checked value was 3166-1:Alpha2, without the ISO).


REPOSITORY RELEASE 2019-03-15
=============================

2019-03-15:
- Release of SI-UBL-2.0 artefacts

2019-03-01:
- Updated the SI-UBL-1.2 PEPPOL and BII rules to the fall 2018 release.
- Removed the 'all versions' schematron file; versions are now done separately
- Fixed a few old issues in SI-UBL-1.1 validation:
  * Backported a fix from SI-UBL-1.2: The check for SI-INV-V11-R453 (missing BillingReference) was wrong
  * Backported a fix from later PEPPOL releases for BII2-T10-R032: The check was in the wrong context
  * Backported a fix from later PEPPOL releases for BII2-T10-R058: The check was in the wrong context

(older changes may be found in the git log)


2018-10-17:
- Added release candidate 1 of SI-UBL 2.0

2018-10-16:
- Restructured repository layout

